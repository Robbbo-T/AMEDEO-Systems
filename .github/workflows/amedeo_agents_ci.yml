name: AMEDEO Agents CI
on: [push, pull_request]
permissions:
  contents: read
  id-token: write
  packages: write
concurrency: ci-${{ github.ref }}

jobs:
  validate:
    runs-on: ubuntu-latest
    env:
      PYTHONHASHSEED: "0"
      AMEDEO_CI_RUN: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -q pytest pytest-cov ruff bandit pyyaml cryptography

      - name: Lint (Ruff strict)
        run: |
          ruff check agents/ tests/ --select E,F,W,C90,N --line-length 120

      - name: UTCS-MI Check
        run: |
          python tools/utcs_validator.py

      - name: Tests + Coverage ≥92%
        run: |
          pytest -v --cov=agents --cov-report=xml --cov-report=term --cov-fail-under=92

      - name: Validate Agent Depth (≥3x each, ≥81x cascade)
        run: |
#       - name: Validate Agent Depth (≥3x each, ≥81x cascade)
#         run: |
#           python tools/depth_validator.py

      - name: Security Scan (HIGH only)
        run: |
          bandit -r agents/ -iii -ll -f json -o bandit.json || true
          python tools/check_bandit.py bandit.json

      - name: Generate DET Evidence
        run: |
          python tools/generate_det_evidence.py > det_evidence.json

      - name: Generate SBOM (Syft)
        uses: anchore/sbom-action@v0
        with:
          path: ./
          format: spdx-json
          output-file: sbom.spdx.json

      - name: PQC Sign Artifacts
        run: |
          python tools/pqc_sign.py agents/base_agent.py agents/planner_agent.py agents/buyer_agent.py agents/scheduler_agent.py agents/ops_pilot_agent.py --algorithm Dilithium3 --output signatures.json

      - name: PQC Verify Signatures
        run: |
          python tools/pqc_verify.py signatures.json --algorithm Dilithium3

      - name: Create Evidence Bundle
        run: |
          tar -czf evidence-bundle.tar.gz \
            det_evidence.json \
            sbom.spdx.json \
            signatures.json \
            coverage.xml \
            bandit.json

      - name: Upload Evidence Bundle
        uses: actions/upload-artifact@v4
        with:
          name: amedeo-evidence-${{ github.sha }}
          path: evidence-bundle.tar.gz
          retention-days: 90

      - name: Final Validation Gate
        run: |
          python tools/final_gate.py
